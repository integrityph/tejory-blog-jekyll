/*! tailwindcss v4.0.6 | MIT License | https://tailwindcss.com */
.invisible {
  visibility: hidden;
}
.visible {
  visibility: visible;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.sticky {
  position: sticky;
}
.container {
  width: 100%;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.resize {
  resize: both;
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.backface-hidden {
  backface-visibility: hidden;
}
.dark\:bg-\[\#171717\] {
  @media (prefers-color-scheme: dark) {
    background-color: #171717;
  }
}
@font-face {
  font-family: nexa;
  font-style: normal;
  font-weight: 300;
  src: local("Nexa"), url(https://fonts.cdnfonts.com/s/16221/NexaLight.woff) format("woff");
}
@font-face {
  font-family: nexa;
  font-style: normal;
  font-weight: 700;
  src: local("Nexa"), url(https://fonts.cdnfonts.com/s/16221/NexaBold.woff) format("woff");
}
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: "Nexa 700", sans-serif !important;
  scroll-behavior: smooth !important;
}
.bg-divider-dark {
  background: linear-gradient(88deg, hsla(0, 0%, 9%, 0), #616161 25%, #616161 75%, hsla(0, 0%, 9%, 0));
  box-shadow: inset 0 -2px 1px 0 hsla(0, 0%, 100%, .1);
}
.autoplay-progress {
  position: absolute;
  right: 16px;
  bottom: 16px;
  z-index: 10;
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  color: var(--swiper-theme-color);
}
.autoplay-progress svg {
  --progress: 0;
  position: absolute;
  left: 0;
  top: 0px;
  z-index: 10;
  width: 100%;
  height: 100%;
  stroke-width: 4px;
  stroke: var(--swiper-theme-color);
  fill: none;
  stroke-dashoffset: calc(125.6px * (1 - var(--progress)));
  stroke-dasharray: 125.6;
  transform: rotate(-90deg);
}
#text-container::after {
  content: "|";
  color: red;
  animation: blinker 1.5s linear infinite;
}
@keyframes blinker {
  50% {
    opacity: 0;
  }
}
.swiper-pagination-bullet {
  background-color: red !important;
}
.swiper-pagination-bullet-active {
  background: red !important;
}
html::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  background-color: #f5f5f5;
}
html::-webkit-scrollbar {
  width: 10px;
  background-color: #f5f5f5;
}
html::-webkit-scrollbar-thumb {
  background-color: #374151;
  border: 2px solid #374151;
}
.card {
  background: radial-gradient(400px circle at 0 0, rgb(255, 255, 255), transparent 0%);
  border-radius: 8px;
  animation: 0.7s ease-in 0s 1 normal none running appear;
}
.cards .card:hover::before {
  opacity: 1;
}
.card-content {
  border-radius: inherit;
  transition: all 0.25s;
}
.card :is(svg, h2, p) {
  opacity: 0.45;
  transition: 0.3s;
}
.card:hover :is(svg, h2, p) {
  opacity: 1;
}
@keyframes appear {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
.container {
  display: flex;
  position: relative;
}
.button {
  cursor: pointer;
  background: none;
  border: none;
  border-radius: 8px;
  padding: .5em 1.5em .5em 0;
  font-weight: 600;
  transition: all .3s ease;
}
.arrow {
  fill: #94a1b2;
  position: absolute;
  pointer-events: none;
  width: 24px;
  right: 0;
  top: 25%;
  transition: all .3s cubic-bezier(0.645, 0.045, 0.355, 1);
}
.button:hover {
  letter-spacing: 2px;
}
.button:hover~.second {
  opacity: .66;
  right: -20px;
  transition-delay: 50ms;
}
.button:hover~.third {
  opacity: .33;
  right: -40px;
  transition-delay: 100ms;
}
.second, .third {
  opacity: 0;
}
@media (max-width: 768px) {
  .card :is(svg, h2, p) {
    opacity: 1;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
